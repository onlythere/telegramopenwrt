name: Build and Release Telegram OpenWrt Package

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Создать релиз?'
        type: boolean
        default: false
      version:
        description: 'Версия пакета (например: 1.0.0-1)'
        required: false
        default: '1.0.0-1'

jobs:
  build_package:
    name: Build Package
    runs-on: ubuntu-22.04

    outputs:
      package_file: ${{ steps.build.outputs.package_file }}
      package_version: ${{ steps.build.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=1.0.0-1" >> $GITHUB_OUTPUT
          fi

      - name: Create IPK package
        id: build
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PACKAGE_NAME="telegramopenwrt"
          PACKAGE_FILE="${PACKAGE_NAME}_${VERSION}_all.ipk"
          
          echo "🔨 Создаем пакет $PACKAGE_FILE"
          
          # Создаем структуру пакета
          mkdir -p package/data package/control
          
          # Копируем файлы проекта в data/
          echo "📁 Копируем файлы..."
          if [[ -d "etc" ]]; then
            cp -r etc package/data/
            echo "✅ Скопирован etc/"
          fi
          
          if [[ -d "sbin" ]]; then
            cp -r sbin package/data/
            echo "✅ Скопирован sbin/"
          fi
          
          if [[ -d "usr" ]]; then
            cp -r usr package/data/
            echo "✅ Скопирован usr/"
          fi
          
          # Создаем control файл с метаданными
          cat > package/control/control << EOF
          Package: $PACKAGE_NAME
          Version: $VERSION
          Architecture: all
          Depends: curl, ca-certificates
          Section: utils
          Priority: optional
          Maintainer: onlythere <https://github.com/onlythere>
          Description: Telegram Scripts for OpenWrt
           A comprehensive set of scripts with plugins API written in bash for managing
           and getting information on OpenWrt routers via Telegram bot.
           .
           Features:
           - Full Telegram bot integration
           - Network interface management
           - Firewall rules control  
           - System monitoring and statistics
           - IP Camera integration
           - Proxy management
           - WiFi control
           - Switch ports monitoring
           - Process management
           - Package management via opkg
          EOF
          
          # Создаем postinst script для установки
          cat > package/control/postinst << 'EOF'
          #!/bin/sh
          echo "Настройка Telegram OpenWrt..."
          
          # Включаем сервисы
          if [[ -f "/etc/init.d/telegram_bot" ]]; then
            /etc/init.d/telegram_bot enable 2>/dev/null || true
            echo "✅ Сервис telegram_bot включен"
          fi
          
          if [[ -f "/etc/init.d/lanports" ]]; then
            /etc/init.d/lanports enable 2>/dev/null || true
            echo "✅ Сервис lanports включен"
          fi
          
          if [[ -f "/etc/init.d/hosts_scan" ]]; then
            /etc/init.d/hosts_scan enable 2>/dev/null || true
            echo "✅ Сервис hosts_scan включен"
          fi
          
          # Устанавливаем права доступа
          chmod +x /sbin/telegram_bot 2>/dev/null || true
          chmod +x /sbin/telebot 2>/dev/null || true
          chmod +x /sbin/telegram_sender 2>/dev/null || true
          
          echo ""
          echo "🤖 Telegram OpenWrt установлен успешно!"
          echo ""
          echo "Следующие шаги:"
          echo "1. Настройте токен бота в /etc/config/telegramopenwrt"
          echo "2. Получите chat_id и добавьте его в конфиг"
          echo "3. Запустите сервисы:"
          echo "   /etc/init.d/telegram_bot start"
          echo "   /etc/init.d/lanports start"
          echo ""
          EOF
          
          # Создаем prerm script для удаления
          cat > package/control/prerm << 'EOF'
          #!/bin/sh
          echo "Останавливаем сервисы Telegram OpenWrt..."
          
          /etc/init.d/telegram_bot stop 2>/dev/null || true
          /etc/init.d/lanports stop 2>/dev/null || true
          /etc/init.d/hosts_scan stop 2>/dev/null || true
          
          /etc/init.d/telegram_bot disable 2>/dev/null || true
          /etc/init.d/lanports disable 2>/dev/null || true
          /etc/init.d/hosts_scan disable 2>/dev/null || true
          
          echo "Сервисы остановлены"
          EOF
          
          # Устанавливаем права на скрипты
          chmod +x package/control/postinst
          chmod +x package/control/prerm
          
          # Создаем архивы
          echo "📦 Создаем архивы..."
          cd package
          tar czf ../data.tar.gz data/
          tar czf ../control.tar.gz control/
          echo "2.0" > ../debian-binary
          
          cd ..
          
          # Создаем .ipk пакет используя ar
          echo "🔧 Собираем IPK пакет..."
          ar r "$PACKAGE_FILE" debian-binary control.tar.gz data.tar.gz
          
          # Проверяем результат
          if [[ -f "$PACKAGE_FILE" ]]; then
            echo "✅ Пакет создан успешно!"
            echo "📊 Информация о пакете:"
            ls -lh "$PACKAGE_FILE"
            echo "📋 Содержимое:"
            ar t "$PACKAGE_FILE"
            echo "package_file=$PACKAGE_FILE" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          else
            echo "❌ Ошибка создания пакета"
            exit 1
          fi

      - name: Test package integrity
        run: |
          PACKAGE_FILE="${{ steps.build.outputs.package_file }}"
          echo "🧪 Тестируем целостность пакета..."
          
          # Проверяем структуру пакета
          echo "Файлы в пакете:"
          ar t "$PACKAGE_FILE"
          
          # Извлекаем и проверяем control
          ar x "$PACKAGE_FILE" control.tar.gz
          tar tzf control.tar.gz
          
          # Извлекаем и проверяем data  
          ar x "$PACKAGE_FILE" data.tar.gz
          echo "Данные в пакете:"
          tar tzf data.tar.gz | head -20
          
          echo "✅ Пакет прошел проверку целостности"

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: telegramopenwrt-package-${{ steps.build.outputs.version }}
          path: ${{ steps.build.outputs.package_file }}
          if-no-files-found: error

  create_release:
    name: Create Release
    needs: build_package
    runs-on: ubuntu-22.04
    if: |
      needs.build_package.result == 'success' && (
        startsWith(github.ref, 'refs/tags/v') ||
        github.event.inputs.create_release == 'true'
      )

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: telegramopenwrt-package-${{ needs.build_package.outputs.package_version }}
          path: ./packages

      - name: Create package repository files
        run: |
          cd packages
          PACKAGE_FILE="${{ needs.build_package.outputs.package_file }}"
          VERSION="${{ needs.build_package.outputs.package_version }}"
          
          # Создаем Packages индекс для opkg
          echo "Package: telegramopenwrt" > Packages
          echo "Version: $VERSION" >> Packages
          echo "Depends: curl, ca-certificates" >> Packages
          echo "Section: utils" >> Packages
          echo "Architecture: all" >> Packages
          echo "Installed-Size: $(stat -c%s "$PACKAGE_FILE")" >> Packages
          echo "Filename: $PACKAGE_FILE" >> Packages
          echo "Size: $(stat -c%s "$PACKAGE_FILE")" >> Packages
          echo "SHA256sum: $(sha256sum "$PACKAGE_FILE" | cut -d' ' -f1)" >> Packages
          echo "Description: Telegram Scripts for OpenWrt - Manage and get information on OpenWrt routers via Telegram bot" >> Packages
          echo "" >> Packages
          
          # Сжимаем индекс
          gzip -c Packages > Packages.gz
          
          # Создаем HTML страницу репозитория
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Telegram OpenWrt Scripts Repository</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                  .container { max-width: 800px; margin: 0 auto; background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  .code { background-color: #2d3748; color: #e2e8f0; padding: 15px; border-radius: 5px; font-family: monospace; margin: 15px 0; }
                  .feature { margin: 10px 0; }
                  .emoji { font-size: 1.2em; }
                  h1 { color: #2d3748; border-bottom: 3px solid #4299e1; padding-bottom: 10px; }
                  h2 { color: #4299e1; margin-top: 30px; }
                  .highlight { background: #bee3f8; padding: 2px 6px; border-radius: 3px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🤖 Telegram OpenWrt Scripts</h1>
                  
                  <p>A comprehensive set of scripts with plugins API written in bash for managing and getting information on OpenWrt routers via Telegram bot.</p>
                  
                  <h2>✨ Features</h2>
                  <div class="feature">🤖 <strong>Full Telegram bot integration</strong></div>
                  <div class="feature">📡 <strong>Network interface management</strong></div>
                  <div class="feature">🔥 <strong>Firewall rules control</strong></div>
                  <div class="feature">📊 <strong>System monitoring and statistics</strong></div>
                  <div class="feature">📷 <strong>IP Camera integration</strong></div>
                  <div class="feature">🌐 <strong>Proxy management</strong></div>
                  <div class="feature">📱 <strong>WiFi control</strong></div>
                  <div class="feature">🔌 <strong>Switch ports monitoring</strong></div>
                  <div class="feature">📋 <strong>Process management</strong></div>
                  <div class="feature">📦 <strong>Package management via opkg</strong></div>
                  
                  <h2>🚀 Quick Installation</h2>
                  <div class="code">echo 'src/gz telegramopenwrt https://github.com/onlythere/telegramopenwrt/releases/latest/download' >> /etc/opkg/customfeeds.conf
          opkg update
          opkg install telegramopenwrt</div>
                  
                  <h2>📥 Manual Installation</h2>
                  <div class="code">wget -O telegramopenwrt_*.ipk https://github.com/onlythere/telegramopenwrt/releases/latest/download/telegramopenwrt_*.ipk
          opkg install telegramopenwrt_*.ipk</div>
                  
                  <h2>⚙️ Configuration</h2>
                  <p>After installation:</p>
                  <ol>
                      <li>Create your bot at <a href="https://t.me/BotFather">@BotFather</a></li>
                      <li>Edit <span class="highlight">/etc/config/telegramopenwrt</span> with your bot token</li>
                      <li>Get your chat ID and add it to config</li>
                      <li>Start the services: <span class="highlight">/etc/init.d/telegram_bot start</span></li>
                  </ol>
                  
                  <h2>📋 Available Packages</h2>
                  <ul>
          EOF
          
          # Добавляем ссылки на пакеты
          for file in *.ipk; do
            if [[ -f "$file" ]]; then
              echo "                  <li><a href=\"$file\">📦 $file</a></li>" >> index.html
            fi
          done
          
          cat >> index.html << 'EOF'
                  </ul>
                  
                  <h2>🔗 Repository Files</h2>
                  <ul>
                      <li><a href="Packages">📄 Packages Index</a></li>
                      <li><a href="Packages.gz">📄 Packages Index (compressed)</a></li>
                  </ul>
                  
                  <p><strong>Compatible with:</strong> OpenWrt 23.05+ | All architectures</p>
              </div>
          </body>
          </html>
          EOF

      - name: Get tag name
        id: tag_name
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            tag="v${{ needs.build_package.outputs.package_version }}"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_name.outputs.tag }}
          name: "Telegram OpenWrt Scripts ${{ steps.tag_name.outputs.tag }}"
          body: |
            ## 🤖 Telegram OpenWrt Scripts ${{ steps.tag_name.outputs.tag }}
            
            A comprehensive set of scripts with plugins API for managing OpenWrt routers via Telegram bot.
            
            ### ✨ What's New
            - Updated package format and build process
            - Improved installation scripts
            - Better error handling and logging
            - Enhanced documentation
            
            ### 🚀 Quick Installation
            ```bash
            # Add repository
            echo 'src/gz telegramopenwrt https://github.com/onlythere/telegramopenwrt/releases/latest/download' >> /etc/opkg/customfeeds.conf
            
            # Update and install
            opkg update
            opkg install telegramopenwrt
            ```
            
            ### 📥 Manual Installation
            ```bash
            # Download and install directly
            wget -O telegramopenwrt_*.ipk https://github.com/onlythere/telegramopenwrt/releases/latest/download/${{ needs.build_package.outputs.package_file }}
            opkg install telegramopenwrt_*.ipk
            ```
            
            ### ⚙️ Post-Installation Setup
            1. **Create your bot:** Visit [@BotFather](https://t.me/BotFather) on Telegram
            2. **Configure:** Edit `/etc/config/telegramopenwrt` with your bot token and chat ID
            3. **Start services:**
               ```bash
               /etc/init.d/telegram_bot start
               /etc/init.d/lanports start
               ```
            4. **Test:** Send `/start` to your bot
            
            ### 📋 Features
            - 🤖 Full Telegram bot integration
            - 📡 Network interface management  
            - 🔥 Firewall rules control
            - 📊 System monitoring and statistics
            - 📷 IP Camera integration
            - 🌐 Proxy management
            - 📱 WiFi control
            - 🔌 Switch ports monitoring
            - 📋 Process management
            - 📦 Package management via opkg
            
            ### 🔧 Compatibility
            - **OpenWrt:** 23.05+ (tested on 24.10.1)
            - **Architecture:** All (bash scripts)
            - **Dependencies:** curl, ca-certificates
            
            ### 📖 Documentation
            - **Repository:** [GitHub](https://github.com/onlythere/telegramopenwrt)
            - **Web Interface:** [Package Repository](https://onlythere.github.io/telegramopenwrt)
            
            ---
            **Package:** `${{ needs.build_package.outputs.package_file }}`  
            **Size:** $(stat -c%s packages/${{ needs.build_package.outputs.package_file }} | numfmt --to=iec-i)B  
            **SHA256:** $(cd packages && sha256sum ${{ needs.build_package.outputs.package_file }} | cut -d' ' -f1)
          files: |
            packages/*.ipk
            packages/Packages
            packages/Packages.gz
            packages/index.html
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update repository stats
        run: |
          echo "🎉 Релиз создан успешно!"
          echo "📦 Пакет: ${{ needs.build_package.outputs.package_file }}"
          echo "🔗 Ссылка: https://github.com/onlythere/telegramopenwrt/releases/tag/${{ steps.tag_name.outputs.tag }}"
          echo ""
          echo "Пользователи могут установить пакет командой:"
          echo "opkg install https://github.com/onlythere/telegramopenwrt/releases/latest/download/${{ needs.build_package.outputs.package_file }}"