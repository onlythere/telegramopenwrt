name: Build and Release Telegram OpenWrt Package

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      create_release:
        description: '–°–æ–∑–¥–∞—Ç—å —Ä–µ–ª–∏–∑?'
        type: boolean
        default: false
      version:
        description: '–í–µ—Ä—Å–∏—è –ø–∞–∫–µ—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.0.0-1)'
        required: false
        default: '1.0.0-1'

jobs:
  build_package:
    name: Build Package
    runs-on: ubuntu-22.04

    outputs:
      package_file: ${{ steps.build.outputs.package_file }}
      package_version: ${{ steps.build.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set version
        id: version
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=1.0.0-1" >> "$GITHUB_OUTPUT"
          fi

      - name: Install OpenWrt build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y binutils-multiarch build-essential

      - name: Create IPK package (OpenWrt compatible)
        id: build
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PACKAGE_NAME="telegramopenwrt"
          ARCH="aarch64_cortex-a53"
          PACKAGE_FILE="${PACKAGE_NAME}_${VERSION}_${ARCH}.ipk"

          echo "üî® –°–æ–∑–¥–∞–µ–º OpenWrt-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π –ø–∞–∫–µ—Ç $PACKAGE_FILE"

          mkdir -p package/data package/control

          [[ -d etc ]] && cp -r etc package/data/
          [[ -d sbin ]] && cp -r sbin package/data/
          [[ -d usr ]] && cp -r usr package/data/

          DATA_SIZE=$(du -sb package/data | cut -f1)

          # –°–æ–∑–¥–∞–µ–º control —Ñ–∞–π–ª
          cat > package/control/control << 'CONTROL_EOF'
          Package: telegramopenwrt
          Version: $VERSION
          Architecture: $ARCH
          Depends: curl, ca-certificates
          Section: utils
          Priority: optional
          Maintainer: onlythere
          License: GPL-2.0
          Source: github.com/onlythere/telegramopenwrt
          Installed-Size: $DATA_SIZE
          Description: Telegram Scripts for OpenWrt - Manage and get information on OpenWrt routers via Telegram bot
          CONTROL_EOF

          # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ control —Ñ–∞–π–ª–µ
          sed -i "s/\$VERSION/$VERSION/g" package/control/control
          sed -i "s/\$ARCH/$ARCH/g" package/control/control
          sed -i "s/\$DATA_SIZE/$DATA_SIZE/g" package/control/control

          # –°–æ–∑–¥–∞–µ–º postinst —Å–∫—Ä–∏–ø—Ç
          cat > package/control/postinst << 'POSTINST_EOF'
          #!/bin/sh
          echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram OpenWrt..."
          chmod +x /sbin/* 2>/dev/null || true
          chmod +x /etc/init.d/* 2>/dev/null || true
          [ -f "/etc/init.d/telegram_bot" ] && /etc/init.d/telegram_bot enable
          [ -f "/etc/init.d/lanports" ] && /etc/init.d/lanports enable
          [ -f "/etc/init.d/hosts_scan" ] && /etc/init.d/hosts_scan enable
          echo "ü§ñ Telegram OpenWrt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
          echo "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–æ–∫–µ–Ω –≤ /etc/config/telegramopenwrt"
          POSTINST_EOF

          # –°–æ–∑–¥–∞–µ–º prerm —Å–∫—Ä–∏–ø—Ç
          cat > package/control/prerm << 'PRERM_EOF'
          #!/bin/sh
          [ -f "/etc/init.d/telegram_bot" ] && /etc/init.d/telegram_bot stop 2>/dev/null
          [ -f "/etc/init.d/lanports" ] && /etc/init.d/lanports stop 2>/dev/null
          [ -f "/etc/init.d/hosts_scan" ] && /etc/init.d/hosts_scan stop 2>/dev/null
          PRERM_EOF

          chmod +x package/control/postinst package/control/prerm

          # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤—ã
          cd package
          tar --numeric-owner --owner=0 --group=0 -czf ../data.tar.gz data/
          tar --numeric-owner --owner=0 --group=0 -czf ../control.tar.gz control/
          echo "2.0" > ../debian-binary
          cd ..

          # –°–æ–∑–¥–∞–µ–º IPK –ø–∞–∫–µ—Ç
          rm -f "$PACKAGE_FILE"
          /usr/bin/ar rcs "$PACKAGE_FILE" debian-binary control.tar.gz data.tar.gz

          if [[ -f "$PACKAGE_FILE" ]]; then
            echo "‚úÖ –ü–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ: $PACKAGE_FILE"
            ls -lh "$PACKAGE_FILE"
            echo "package_file=$PACKAGE_FILE" >> "$GITHUB_OUTPUT"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞"
            exit 1
          fi

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: telegramopenwrt-package-${{ steps.build.outputs.version }}
          path: ${{ steps.build.outputs.package_file }}
          if-no-files-found: error

  create_release:
    name: Create Release
    needs: build_package
    runs-on: ubuntu-22.04
    if: ${{ needs.build_package.result == 'success' && (startsWith(github.ref, 'refs/tags/v') || github.event.inputs.create_release == 'true') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download package
        uses: actions/download-artifact@v4
        with:
          name: telegramopenwrt-package-${{ needs.build_package.outputs.package_version }}
          path: ./packages

      - name: Create package repository files
        run: |
          cd packages
          PACKAGE_FILE="${{ needs.build_package.outputs.package_file }}"
          VERSION="${{ needs.build_package.outputs.package_version }}"

          # –°–æ–∑–¥–∞–µ–º Packages –∏–Ω–¥–µ–∫—Å
          cat > Packages << PACKAGES_EOF
          Package: telegramopenwrt
          Version: $VERSION
          Depends: curl, ca-certificates
          Section: utils
          Architecture: aarch64_cortex-a53
          Installed-Size: $(stat -c%s "$PACKAGE_FILE")
          Filename: $PACKAGE_FILE
          Size: $(stat -c%s "$PACKAGE_FILE")
          SHA256sum: $(sha256sum "$PACKAGE_FILE" | cut -d' ' -f1)
          Description: Telegram Scripts for OpenWrt

          PACKAGES_EOF

          gzip -c Packages > Packages.gz

      - name: Get tag name
        id: tag_name
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=v${{ needs.build_package.outputs.package_version }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_name.outputs.tag }}
          name: "Telegram OpenWrt Scripts ${{ steps.tag_name.outputs.tag }}"
          body: |
            ## ü§ñ Telegram OpenWrt Scripts ${{ steps.tag_name.outputs.tag }}

            ### üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
            ```bash
            echo 'src/gz telegramopenwrt https://github.com/onlythere/telegramopenwrt/releases/latest/download' >> /etc/opkg/customfeeds.conf
            opkg update
            opkg install telegramopenwrt
            ```

            ### üì• –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
            ```bash
            wget -O telegramopenwrt.ipk https://github.com/onlythere/telegramopenwrt/releases/latest/download/${{ needs.build_package.outputs.package_file }}
            opkg install telegramopenwrt.ipk
            ```

            ### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
            1. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ —É [@BotFather](https://t.me/BotFather)
            2. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ `/etc/config/telegramopenwrt`
            3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: `/etc/init.d/telegram_bot start`

            ---
            **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:** aarch64_cortex-a53 (Xiaomi AX3000T –∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ)
          files: |
            packages/*.ipk
            packages/Packages
            packages/Packages.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}