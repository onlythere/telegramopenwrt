name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.editorconfig'
      - '.gitignore'
      - 'LICENSE'
      - 'README.md'
  workflow_dispatch:
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gh.outputs.version }}
      release: ${{ steps.gh.outputs.release }}
      sha: ${{ steps.gh.outputs.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: GH
        id: gh
        env:
          REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ Makefile –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          if [ -f "Makefile" ]; then
            echo "version=$(cat Makefile | grep "PKG_VERSION" | head -1 | sed 's/.*:= *//' | sed 's/ *$//')" >> $GITHUB_OUTPUT
            echo "release=$(cat Makefile | grep "PKG_RELEASE" | head -1 | sed 's/.*:= *//' | sed 's/ *$//')" >> $GITHUB_OUTPUT
          else
            echo "version=1.0.0" >> $GITHUB_OUTPUT
            echo "release=1" >> $GITHUB_OUTPUT
          fi

          if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            GITHUB_SHA=$(cat $GITHUB_EVENT_PATH | jq -r .pull_request.head.sha)
          fi
          echo "sha=$(echo ${GITHUB_SHA::7})" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

  build-openwrt:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - openwrt-24.10
        arch:
          - aarch64_cortex-a53  # –î–ª—è –≤–∞—à–µ–≥–æ Xiaomi AX3000T
          # - aarch64_cortex-a72
          - aarch64_generic
          # - arm_cortex-a7_neon-vfpv4
          # - arm_cortex-a9
          - mips_24kc
          - mipsel_24kc
          - x86_64
    container:
      image: openwrt/sdk:${{ matrix.arch }}-${{ matrix.branch }}
      options: --user root
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create package structure
        run: |
          # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–∫–µ—Ç–∞ –¥–ª—è OpenWrt
          mkdir -p telegramopenwrt
          
          # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
          cp Makefile telegramopenwrt/
          cp -r etc sbin usr telegramopenwrt/
          
          echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞:"
          find telegramopenwrt -type f | head -20

      - name: Initialize SDK
        id: init_sdk
        working-directory: /builder
        run: |
          HOME=/builder ./setup.sh

      - name: Build packages
        id: build
        env:
          VERSION: ${{ needs.prepare.outputs.version }}
          RELEASE: ${{ needs.prepare.outputs.release }}
          SHA: ${{ needs.prepare.outputs.sha }}
        working-directory: /builder
        run: |
          # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à –ø–∞–∫–µ—Ç –≤ feeds
          echo "src-link telegramopenwrt $GITHUB_WORKSPACE" >> feeds.conf
          echo "Feeds configuration:"
          cat feeds.conf
          
          # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—à feed
          ./scripts/feeds update telegramopenwrt
          
          # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç
          ./scripts/feeds install -p telegramopenwrt telegramopenwrt
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–∫–µ—Ç –ø–æ—è–≤–∏–ª—Å—è
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–∫–µ—Ç–∞:"
          ls -la package/feeds/telegramopenwrt/ 2>/dev/null || echo "–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
          
          # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –∫–æ–ø–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç –Ω–∞–ø—Ä—è–º—É—é
          if [ ! -d "package/feeds/telegramopenwrt/telegramopenwrt" ]; then
            echo "–ö–æ–ø–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç –Ω–∞–ø—Ä—è–º—É—é..."
            mkdir -p package/telegramopenwrt
            cp -r $GITHUB_WORKSPACE/telegramopenwrt/* package/telegramopenwrt/
            echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ package/telegramopenwrt:"
            ls -la package/telegramopenwrt/
          fi
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          echo "CONFIG_PACKAGE_telegramopenwrt=m" > .config
          echo "CONFIG_ALL_KMODS=n" >> .config
          echo "CONFIG_ALL_NONSHARED=n" >> .config
          
          make defconfig
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
          echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞:"
          grep telegramopenwrt .config || echo "–ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
          echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã:"
          make package/symlinks
          find package/ -name "*telegram*" -type d
          
          # –ü—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å –ø–∞–∫–µ—Ç
          if [ -d "package/telegramopenwrt" ]; then
            echo "–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞..."
            make package/telegramopenwrt/compile V=s
          elif [ -d "package/feeds/telegramopenwrt" ]; then
            echo "–°–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞ –∏–∑ feeds..."
            make package/feeds/telegramopenwrt/compile V=s
          else
            echo "‚ùå –ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            echo "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ package/:"
            find package/ -maxdepth 2 -type d
            exit 1
          fi
          
          # –ò—â–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π –ø–∞–∫–µ—Ç
          PACKAGE_FILE=$(find ./bin -type f -name 'telegramopenwrt*.ipk' | head -1)
          if [ -n "$PACKAGE_FILE" ]; then
            mv "$PACKAGE_FILE" ./telegramopenwrt-$VERSION-$RELEASE-$SHA-${{ matrix.arch }}-${{ matrix.branch }}.ipk
            echo "‚úÖ –ü–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω: telegramopenwrt-$VERSION-$RELEASE-$SHA-${{ matrix.arch }}-${{ matrix.branch }}.ipk"
            ls -la ./telegramopenwrt*.ipk
          else
            echo "‚ùå –ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ bin/"
            echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ bin/:"
            find ./bin -name "*.ipk" -ls 2>/dev/null || echo "–ù–µ—Ç .ipk —Ñ–∞–π–ª–æ–≤"
            exit 1
          fi

      - name: Upload packages
        if: steps.build.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: telegramopenwrt-${{ matrix.branch }}-${{ matrix.arch }}
          path: /builder/telegramopenwrt*.ipk
          if-no-files-found: error

  pre-release:
    if: github.event_name != 'pull_request' && github.ref_name == 'master'
    needs: [build-openwrt]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create package repository
        run: |
          # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
          mkdir -p repo/packages
          
          # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ .ipk —Ñ–∞–π–ª—ã
          find . -name "telegramopenwrt*.ipk" -exec cp {} repo/packages/ \;
          
          cd repo/packages
          
          # –°–æ–∑–¥–∞–µ–º Packages –∏–Ω–¥–µ–∫—Å
          for ipk in *.ipk; do
            if [ -f "$ipk" ]; then
              echo "Package: telegramopenwrt"
              echo "Version: $(echo $ipk | sed -n 's/telegramopenwrt-\([^-]*-[^-]*\)-.*/\1/p')"
              echo "Architecture: $(echo $ipk | sed -n 's/.*-\([^-]*\)-openwrt.*/\1/p')"
              echo "Depends: curl, ca-certificates"
              echo "Section: utils"
              echo "Filename: $ipk"
              echo "Size: $(stat -c%s "$ipk")"
              echo "SHA256sum: $(sha256sum "$ipk" | cut -d' ' -f1)"
              echo "Description: Telegram Scripts for OpenWrt"
              echo ""
            fi
          done > Packages
          
          # –°–∂–∏–º–∞–µ–º –∏–Ω–¥–µ–∫—Å
          gzip -c Packages > Packages.gz
          
          # –°–æ–∑–¥–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Å—Ç—ã–º —Å–ø–æ—Å–æ–±–æ–º
          echo '<!DOCTYPE html>' > index.html
          echo '<html><head><title>Telegram OpenWrt Packages</title></head><body>' >> index.html
          echo '<h1>ü§ñ Telegram OpenWrt Scripts</h1>' >> index.html
          echo '<p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è OpenWrt —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞</p>' >> index.html
          echo '<h2>üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞</h2>' >> index.html
          echo '<pre>echo "src/gz telegramopenwrt https://github.com/onlythere/telegramopenwrt/releases/download/continuous" >> /etc/opkg/customfeeds.conf</pre>' >> index.html
          echo '<pre>opkg update && opkg install telegramopenwrt</pre>' >> index.html
          echo '<h2>üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã</h2><ul>' >> index.html
          
          for ipk in *.ipk; do
            if [ -f "$ipk" ]; then
              echo "<li><a href=\"$ipk\">$ipk</a></li>" >> index.html
            fi
          done
          
          echo '</ul></body></html>' >> index.html
          
          cd ../..

      - name: Upload assets
        uses: slord399/action-automatic-releases@v1.0.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: 'continuous'
          prerelease: true
          title: 'Development build'
          files: |
            ./repo/packages/*.ipk
            ./repo/packages/Packages
            ./repo/packages/Packages.gz
            ./repo/packages/index.html